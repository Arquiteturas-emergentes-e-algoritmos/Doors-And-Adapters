// <auto-generated />
using System;
using DoorsAndAdapters.Infrastructure.EntityFrameworkDataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoorsAndAdapters.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241023234407_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DoorsAndAdapters.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DoorsAndAdapters.Domain.Entities.User", b =>
                {
                    b.OwnsOne("DoorsAndAdapters.Domain.Entities.Glucometer", "Glucometer", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsMany("DoorsAndAdapters.Domain.ValueObjects.GlucoseTest", "GlucoseTests", b2 =>
                                {
                                    b2.Property<Guid>("GlucometerUserId")
                                        .HasColumnType("char(36)");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("char(36)");

                                    b2.Property<DateTime>("Time")
                                        .HasColumnType("datetime(6)");

                                    b2.Property<ushort>("Value")
                                        .HasColumnType("smallint unsigned");

                                    b2.HasKey("GlucometerUserId", "Id");

                                    b2.ToTable("GlucoseTest");

                                    b2.WithOwner()
                                        .HasForeignKey("GlucometerUserId");
                                });

                            b1.Navigation("GlucoseTests");
                        });

                    b.OwnsOne("DoorsAndAdapters.Domain.Entities.MedicationPlan", "MedicationPlan", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("BeginAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("FinishAt")
                                .HasColumnType("datetime(6)");

                            b1.Property<Guid>("Id")
                                .HasColumnType("char(36)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsMany("DoorsAndAdapters.Domain.ValueObjects.Medication", "Medications", b2 =>
                                {
                                    b2.Property<Guid>("MedicationPlanUserId")
                                        .HasColumnType("char(36)");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<DateTime>("TakeAt")
                                        .HasColumnType("datetime(6)");

                                    b2.HasKey("MedicationPlanUserId", "Id");

                                    b2.ToTable("Medication");

                                    b2.WithOwner()
                                        .HasForeignKey("MedicationPlanUserId");
                                });

                            b1.Navigation("Medications");
                        });

                    b.Navigation("Glucometer")
                        .IsRequired();

                    b.Navigation("MedicationPlan")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
